#################################################################
## Master Makefile for Cheshire II            
##
## make all -- makes and installs libraries
## make newbin -- makes and installs binaries in ./bin
#################################################################
#################################################################
## the SYSTEMTYPE variable should be either:
## ALPHA -- for DEC Alphas running OSF/1 or Digital Unix
## SOLARIS -- for Sun Sparcs under Solaris
## HP -- for HP workstations under HPUX
## LINUX -- for Linux systems
#################################################################
SYSTEMTYPE= MACOSX

#################################################################
## The following should point to the include directory for 
## tk (4.0) and tcl (7.4) and the location of the libraries for
## them.
#################################################################
TK_DIR=	/usr/include
TCL_DIR= /usr/include
TK_LIBS= /usr/lib
TK_LIBINC =  "-ltk8.4 -ltkstub8.4"
TCL_LIBINC = "-ltcl8.4 -ltclstub8.4"

#if ZVERSION is set to Z3950_2001 the compiled version will include some
# new variables and options -- which may cause problems with older
# Z39.50 1995 clients or servers.
# comment out the following line for z39.50 1995 compatibility
Z_VERSION = "-DZ3950_2001"

# Solaris socket libraries and functions -- comment out if not SOLARIS
#SYS_LIBS= "-lnsl -lsocket -lgen -ldl"
#SYS_OBJ= strtok_r.o

# LINUX library definitions -- piggybacks on SYS_LIBS -- comment out if not
# Linux
SYS_LIBS= "-L/usr/lib -ldl -L/usr/local/lib -lxml2"

# If NOT solaris and you have reentrant libraries for strtok, etc. in libc_r.a
# define the following and comment out the SYS_OBJ above
#RE_ENTRANT= -lc_r

#some solaris system don't have the rusage struct and getrusage
#defining the following removes it from the code
#RUSAGE_DEF = "-DNO_RUSAGE"

X11_INCLUDES = -I/usr/X11R6/include
X11_LIBS = "-L/usr/X11R6/lib -lX11"

#################################################################
## Relational dbms interface code -- These should be blank if
## there is not an ILLUSTRA, POSTGRES95, INFORMIX, ORACLE, ETC.
## database file being accessed via a z39.50 gateway.
#################################################################
# DBMSFLAG should be POSTGRESQL or ILLUSTRA, (INFORMIX, or ORACLE not available yet) 
# DBMS_FLAG= "-DILLUSTRA"
#DBMS_FLAG="-DPOSTGRESQL"
#DBMS_FLAG="-DMYSQLDBMS"
DBMS_FLAG=
# These should show the location of the include files and libraries
# for the DBMS.
#DBMS_INC= "-I/usr/local/illustra/h"
#DBMS_LIB= "-L/usr/local/illustra/lib -lmi"
#DBMS_INC="-I/usr/include/pgsql"
#DBMS_LIB="-L/usr/lib/pgsql -lpq"
#DBMS_INC="-I/usr/include/mysql"
#DBMS_LIB="-L/usr/lib/mysql -lmysqlclient"
DBMS_INC="-I/usr/local/mysql/include"
DBMS_LIB="-L/usr/local/mysql/lib -lmysqlclient -lz"


#################################################################
## What make utility are you using?
#################################################################
MAKE = make
RANLIBPROG = /usr/bin/ranlib

all: lib/libdb.a
	cd ac_list; $(MAKE) SYSTYPE=$(SYSTEMTYPE) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG)
	cd ac_utils; $(MAKE) SYSTYPE=$(SYSTEMTYPE) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG)
	cd zpdu; $(MAKE) SYSTYPE=$(SYSTEMTYPE) ZVERSION=$(Z_VERSION)   RANLIB=$(RANLIBPROG)
	cd socket; $(MAKE) SYSTYPE=$(SYSTEMTYPE) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG)
	cd client; $(MAKE) SYSTYPE=$(SYSTEMTYPE) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG)
	cd sgmlparse; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC) SYSLIBS=$(SYS_LIBS) XLIBS=$(X11_LIBS) XINC=$(X11_INCLUDES) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG) libsgml.a ; cp lib*.a ../lib
	cd config; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC) XINC=$(X11_INCLUDES) DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG) libconfig.a ; cp lib*.a ../lib
	cd fileio; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC) ZVERSION=$(Z_VERSION) XINC=$(X11_INCLUDES) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG) libfileio.a ; cp lib*.a ../lib
	cd tclhash; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG) libtclhash.a ; cp lib*.a ../lib
	cd marclib; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG) libmarc.a ; cp lib*.a ../lib
	cd diagnostic; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG) libdiag.a ; cp lib*.a ../lib
	cd cmdparse; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) ZVERSION=$(Z_VERSION) RANLIB=$(RANLIBPROG) libcmdparse.a ; cp lib*.a ../lib
	cd sgml2marc; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC) ZVERSION=$(Z_VERSION) RANLIB=$(RANLIBPROG) libsgml2marc.a ; cp lib*.a ../lib
	cd wordnet/lib; $(MAKE) SYSTYPE=$(SYSTEMTYPE) ZVERSION=$(Z_VERSION) RANLIB=$(RANLIBPROG) lib ; cp lib*.a ../../lib
	cd search; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC) XINC=$(X11_INCLUDES)  DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB) ZVERSION=$(Z_VERSION) RANLIB=$(RANLIBPROG) libsearch.a ; cp lib*.a ../lib
	cd index; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC) XINC=$(X11_INCLUDES)  ZVERSION=$(Z_VERSION)  DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB) RANLIB=$(RANLIBPROG) RANLIB=$(RANLIBPROG) libindex.a libgridindex.a ; cp lib*.a ../lib
	cd snowball; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC) XINC=$(X11_INCLUDES)  ZVERSION=$(Z_VERSION)  DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB) RANLIB=$(RANLIBPROG) libstemmer.o; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC) XINC=$(X11_INCLUDES)  ZVERSION=$(Z_VERSION)  DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB) RANLIB=$(RANLIBPROG) libsnowball.a ; cp lib*.a ../lib
	cd zserver; $(MAKE) SYSTYPE=$(SYSTEMTYPE)  TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC)  XINC=$(X11_INCLUDES) XLIBS=$(X11_LIBS) SYSLIBS=$(SYS_LIBS) SYSOBJ=$(SYS_OBJ) REENT=$(RE_ENTRANT) DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB) ZVERSION=$(Z_VERSION) RANLIB=$(RANLIBPROG) libzserver.a
	cd jserver; $(MAKE) SYSTYPE=$(SYSTEMTYPE)  TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC)  XINC=$(X11_INCLUDES) XLIBS=$(X11_LIBS) SYSLIBS=$(SYS_LIBS) SYSOBJ=$(SYS_OBJ) REENT=$(RE_ENTRANT) DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB) ZVERSION=$(Z_VERSION) RANLIB=$(RANLIBPROG) libjserver.a

bin: all
	cd utils; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC)  SYSLIBS=$(SYS_LIBS) XLIBS=$(X11_LIBS) XINC=$(X11_INCLUDES) DBMSLIB=$(DBMS_LIB) ZVERSION=$(Z_VERSION) RANLIB=$(RANLIBPROG) all ; cp buildassoc dumprecs getnumrecs cheshire_load read_datastore cheshire_file_filter BuildContDB DumpContDB mark_recs_deleted ../bin
	cd config; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC)  SYSLIBS=$(SYS_LIBS) XLIBS=$(X11_LIBS) XINC=$(X11_INCLUDES) DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB) ZVERSION=$(Z_VERSION) RANLIB=$(RANLIBPROG) test_config ; cp test_config ../bin
	cd sgmlparse; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC)  SYSLIBS=$(SYS_LIBS) XLIBS=$(X11_LIBS) XINC=$(X11_INCLUDES) DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG)  all ; cp dtd_parser schema_parser parser element_count ../bin
	cd search; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC)  SYSLIBS=$(SYS_LIBS) SYSOBJ=$(SYS_OBJ) XLIBS=$(X11_LIBS) XINC=$(X11_INCLUDES) REENT=$(RE_ENTRANT)  DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG) testsrch2 ; cp testsrch2 ../bin
	cd index; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC) RUSAGE=$(RUSAGE_DEF) SYSLIBS=$(SYS_LIBS) SYSOBJ=$(SYS_OBJ) XLIBS=$(X11_LIBS) XINC=$(X11_INCLUDES)   DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB) REENT=$(RE_ENTRANT) ZVERSION=$(Z_VERSION) RANLIB=$(RANLIBPROG)  all ; cp index_cheshire index_clusters in_test dumpdb dumpds countdb dumppost highpost dumpcomp dumpprox delete_recs batch_load convert2bitmap index_vectors dumpvector index_cheshire_grid ../bin
	cd marc2sgml; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC)  SYSLIBS=$(SYS_LIBS) SYSOBJ=$(SYS_OBJ) XLIBS=$(X11_LIBS) XINC=$(X11_INCLUDES) REENT=$(RE_ENTRANT) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG) all; cp marc2sgml ../bin
	cd jmcd_logtool; $(MAKE) SYSTYPE=$(SYSTEMTYPE)  TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC) XINC=$(X11_INCLUDES) XLIBS=$(X11_LIBS) SYSLIBS=$(SYS_LIBS) SYSOBJ=$(SYS_OBJ) REENT=$(RE_ENTRANT) DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB) ZVERSION=$(Z_VERSION) RANLIB=$(RANLIBPROG) 
	cd marclib; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG) cpmarc ; cp cpmarc ../bin
	cd cmdparse; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) ZVERSION=$(Z_VERSION) testparse ; cp testparse ../bin
	cd sgml2marc; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC)  SYSLIBS=$(SYS_LIBS) SYSOBJ=$(SYS_OBJ) XLIBS=$(X11_LIBS) XINC=$(X11_INCLUDES) REENT=$(RE_ENTRANT) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG) sgml2marc ; cp sgml2marc ../bin
	cd cheshire2; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC)  SYSLIBS=$(SYS_LIBS) SYSOBJ=$(SYS_OBJ) XLIBS=$(X11_LIBS) XINC=$(X11_INCLUDES) REENT=$(RE_ENTRANT)  DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG) all; cp cheshire2 ztcl webcheshire staffcheshire ../bin
	cd snowball; $(MAKE) SYSTYPE=$(SYSTEMTYPE) TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC) XINC=$(X11_INCLUDES)  ZVERSION=$(Z_VERSION)  DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB) RANLIB=$(RANLIBPROG) snowball_stem_test ; cp snowball_stem_test ../bin
	cd zserver; $(MAKE) SYSTYPE=$(SYSTEMTYPE)  TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC)  XINC=$(X11_INCLUDES) XLIBS=$(X11_LIBS) SYSLIBS=$(SYS_LIBS) SYSOBJ=$(SYS_OBJ) REENT=$(RE_ENTRANT)  DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB)  RANLIB=$(RANLIBPROG) zserver; cp zserver ../bin
	cd jserver; $(MAKE) SYSTYPE=$(SYSTEMTYPE)  TKDIR=$(TK_DIR) TCLDIR=$(TCL_DIR) TKLIBS=$(TK_LIBS) TKLIBINC=$(TK_LIBINC) TCLLIBINC=$(TCL_LIBINC)  XINC=$(X11_INCLUDES) XLIBS=$(X11_LIBS) SYSLIBS=$(SYS_LIBS) SYSOBJ=$(SYS_OBJ) REENT=$(RE_ENTRANT)  DBMSFLAG=$(DBMS_FLAG) DBMSINC=$(DBMS_INC) DBMSLIB=$(DBMS_LIB) ZVERSION=$(Z_VERSION)  RANLIB=$(RANLIBPROG) jserver; cp jserver ../bin


lib/libdb.a:
	cd BerkeleyDB/build_unix; CC=gcc; export CC; ../dist/configure ; $(MAKE) ; cp libdb.a ../../lib; cp *.h ../../header; cp db_archive db_checkpoint db_deadlock db_dump db_load  db_recover db_stat ../../bin 


clean:
	cd BerkeleyDB/build_unix; $(MAKE) clean
	cd ac_list; $(MAKE) SYSTYPE=$(SYSTEMTYPE) clean
	cd ac_utils; $(MAKE) SYSTYPE=$(SYSTEMTYPE) clean
	cd zpdu; $(MAKE) SYSTYPE=$(SYSTEMTYPE) clean
	cd socket; $(MAKE) SYSTYPE=$(SYSTEMTYPE) clean
	cd client; $(MAKE) SYSTYPE=$(SYSTEMTYPE) clean
	cd config; $(MAKE) SYSTYPE=$(SYSTEMTYPE) reallyclean
	cd fileio; $(MAKE) SYSTYPE=$(SYSTEMTYPE) reallyclean
	cd utils; $(MAKE) SYSTYPE=$(SYSTEMTYPE) clean
	cd tclhash; $(MAKE) SYSTYPE=$(SYSTEMTYPE) reallyclean
	cd marclib; $(MAKE) SYSTYPE=$(SYSTEMTYPE) reallyclean
	cd marc2sgml; $(MAKE) SYSTYPE=$(SYSTEMTYPE) reallyclean
	cd diagnostic; $(MAKE) SYSTYPE=$(SYSTEMTYPE) reallyclean
	cd cmdparse; $(MAKE) SYSTYPE=$(SYSTEMTYPE) reallyclean
	cd sgmlparse; $(MAKE) SYSTYPE=$(SYSTEMTYPE) reallyclean
	cd sgml2marc; $(MAKE) SYSTYPE=$(SYSTEMTYPE) reallyclean
	cd wordnet/lib; $(MAKE) SYSTYPE=$(SYSTEMTYPE) clean
	cd search; $(MAKE) SYSTYPE=$(SYSTEMTYPE) reallyclean
	cd index; $(MAKE) SYSTYPE=$(SYSTEMTYPE) clean
	cd jmcd_logtool; $(MAKE) SYSTYPE=$(SYSTEMTYPE) clean
	cd cheshire2; $(MAKE) SYSTYPE=$(SYSTEMTYPE) reallyclean
	cd zserver; $(MAKE) SYSTYPE=$(SYSTEMTYPE) clean
	cd jserver; $(MAKE) SYSTYPE=$(SYSTEMTYPE) clean

reallyclean: clean
	rm -rf bin/*
	rm -rf lib/*
	cd index; $(MAKE) SYSTYPE=$(SYSTEMTYPE) reallyclean
	cd BerkeleyDB/build_unix; $(MAKE) distclean
	cd wordnet/lib; rm -f libwn.a

newbin:
	touch cheshire2/z_init.c
	touch zserver/zserver.c
	touch index/idxxkey.c
	touch index/build_vector_index.c
	- mkdir lib
	- mkdir bin
	$(MAKE) bin
