#!/usr/users/ray/Work/cheshire/bin/cheshire2 -f
#
# 
#        File Name:      opac
# 
#        Programmer:     Ralph Moon, Jerome McDonough
#
#        Based on:       mkSearch.tcl (by Joachim Martin and
#                          Alicia Abramson)
# 
#        Purpose:        Search interface for Cheshire II
# 
#        Usage:          
# 
#        Variables:      none
# 
#        Return Conditions and Return Codes:	none
# 
#        Date:           9/1/94
#        Revised:
#        Version:        1.3
#        Copyright (c) 1995.  The Regents of the University of California
#          All Rights Reserved
# 
# ***********************************************************************/

set defaultPath "/home/ray/Work/cheshire/cheshire2/GUI6";  # Path for Cheshire II stuff

# Includes

source $defaultPath/pDialog.tcl;	# Dialog box routine
source $defaultPath/pBooleanTypeDisplay.tcl; # Display current boolean type
source $defaultPath/chWidgetOn.tcl;	# Routines to control widget states
source $defaultPath/pClearSearch.tcl;	# Clear current search results
source $defaultPath/pReformat.tcl;	# Reformat current search results
source $defaultPath/pZselect.tcl;	# Connect with host
source $defaultPath/chDisplayRec.tcl;	# Record formatting and display
source $defaultPath/pSearchButtonCmd.tcl;# "Search" button command
source $defaultPath/pMoreButtonCmd.tcl;	# "More" button command
source $defaultPath/chSave.tcl;		# Record save routines
source $defaultPath/chHistory.tcl;	# Search history routines
source $defaultPath/pPrintDlg.tcl;	# Handle main print dialog
source $defaultPath/pPrintCmd.tcl;	# Print results
source $defaultPath/pMailButtonCmd.tcl;	# "Mail" button command
source $defaultPath/pResetButtonCmd.tcl;# "Reset" button command
source $defaultPath/chCredits.tcl;	# Credits
source $defaultPath/chFileView.tcl;	# File Viewing tool for help
source $defaultPath/chSelect.tcl;	# Select button for records
source $defaultPath/pTagCreate.tcl;     # create display tags for text widgets
source $defaultPath/chLog.tcl;          # transaction logging
source $defaultPath/pResize.tcl;        # Resize user interface

# NEW FUNCTIONS FOR PROB. SEARCHING
source $defaultPath/pFeedbkCmd.tcl;
source $defaultPath/pFeedbkButtonCmd.tcl; # Relevance Feedback search button
source $defaultPath/pClearTerms.tcl;      # clear terms for both bool and prob
source $defaultPath/chMisc.tcl;		  # Miscellaneous new utility functions
source $defaultPath/pSearchChange.tcl;    # rearranges search area using next 2
source $defaultPath/pSearchFaceB.tcl;     # changes search area to boolean
source $defaultPath/pSearchFaceP.tcl;     # changes search area to probab.

#NEW FUNCTIONS FOR EVENT LOOP
source $defaultPath/pRestart.tcl;       # restarts client 

#NEW FUNCTIONS FOR HELP SYSTEM
# Note that tkinfo.tcl has a set of paths to search for the help
# files that does *not* include the defaultPath above.  If
# you're setting up the cheshire2 client on a system using 
# a different default directory for documents that /usr3/cheshire2/new/doc
# you'll have to change the defaultPath variable above *and*
# the /usr3... path in tkinfo.tcl
set tkiEmbed 1;			 	# Lets help system code know
                                        # it's running in embedded mode
source $defaultPath/tkinfo.tcl; 
source $defaultPath/tkicore.tcl;        # All of these five .tcl files are
source $defaultPath/tkiwin.tcl;         # for the tkinfo tool created by
source $defaultPath/tkisearchbox.tcl;   # Kennard White, which we're using
source $defaultPath/tkitopgetopt.tcl;   # for the help system.
source $defaultPath/pComplaints.tcl;

# Initialized variables

set titleFont "-*-Courier-Bold-O-Normal-*-140-*"; #Default Title Font
set defaultBG "NavajoWhite1";		# Default background color
set defaultActiveBG "NavajoWhite3";	# Default active bg color
set boolTypeFG "firebrick4";		# Boolean type display fg color
set dialogBG "Wheat1";                  # Dialog box background
set dialogActiveBG "Wheat2";            # Dialog box active bacground
set textBG "white";			# Text window color
set entryBG "Wheat2";			# Entry window color
set buttonBG "NavajoWhite2";            # Button Color
set HTFG "red4";                        # hypertext foreground
set HTActiveFG "red2";                  # active hypertext fg color
set disabledFG "grey65";              # Disabled function label color
set selectFG "IndianRed3";		# active foreground for Menu ticks
set tmpdir "/tmp/";                     # temp directory for log files, etc.
set fixedlogfilename "NULL";            # fixed length record log file
set varlogfilename "NULL";              # variable length record log file
set transnum 1;                         # unique transaction ID for logs
set userid 1;                           # ID for each user "session"
set C2_helpinfo1 "";                    # help info for logs
set C2_helpinfo2 "";
set C2_helpinfo3 "";
zset pElementSetNames F;		# Request full information from server
set stoplist "";			# stoplist for pTRECtag           

# !! This variable is a temporary expedient for testing the interface.
# It will be replaced with an array indexed by host. The first item each
# is the index name as it will be give to zfind, and the second is the
# label to appear on the button.  The third is the default mode of search
# interaction.

set hostList {{"oxford1" "Oxford Test" "Ranked" "classcluster"} \
	{"oxford2" "Oxford Text Archive" "Ranked" "classcluster"} \
	{"liverpool" "Liverpool SF" "Ranked" "classcluster"} \
	{"SUNSITE" "UCB Physical Sci." "Ranked" "classcluster"} \
	{"cheshire" "test cheshire db" "Ranked" "classcluster"} \
	{"sherlock" "test sherlock db" "Ranked" "classcluster"} \
	{"russian" "test RUSSIAN db" "Ranked" "rus_classcluster"} \
	{"trec" "TREC" "Ranked" ""} \
        {"RLIN" "RLIN BIB" "Boolean" ""} \
        {"AUT" "RLIN AUT" "Boolean" ""} \
        {"FLP" "RLIN FLP" "Boolean" ""} \
        {"melvyl" "Melvyl" "Boolean" ""} \
	{"ten" "Melvyl Ten Year" "Boolean" ""} \
	{"pe" "Melvyl Periodicals" "Boolean" ""} \
	{"mags" "Expanded Acad Index" "Boolean" ""} \
	{"news" "Nat'l Newspaper Index" "Boolean" ""} \
	{"comp" "Computer Database" "Boolean" ""} \
	{"ins" "Inspec" "Boolean" ""} \
        {"abi" "ABI Inform" "Boolean" ""} \
	{"lc_books" "Library of Congress" "Boolean" ""} \
	{"cmu" "Carnegie Mellon" "Boolean" ""} \
	{"duke" "Duke" "Boolean" ""} \
	{"uncc" "UNC Chapel Hill" "Boolean" ""} \
	{"penn" "Penn State" "Boolean" ""} \
	{"att" "ATT Library" "Boolean" ""}}

#		  {"cheshire3" "Test Cheshire A" "Ranked"}}

# the following indexLists specify the searchable indexes for each
# host listed above, and a button label to go with the index name.
# Ultimately, the searchable indexes for each server should be given
# *by* the server through Z39.50 explain, rather than keeping a local list.

# set some new addresses for databases...
puts "One moment -- setting up some database connections"
#zselect oxford1 erl.ox.ac.uk bibfile 2100
#zclose
#zselect oxford2 erl.ox.ac.uk ota 2100
#zclose
#zselect russian sherlock.berkeley.edu russian 2100
#zclose

set indexList(RLIN) {{"author" "Author"} \
			   {"title" "Title"} \
			   {"subject" "Subject"} \
			   {"organization" "Org Name"} \
			   {"series" "Series"} \
			   {"xtitle" "Exact Title"} \
			   {"xsu" "Exact Subject"} \
			   {"date" "Date"} {"lang" "Language"} \
			   {"isbn" "ISBN"} {"lccn" "LCCN"} \
			   {"unused" "Unused"}}

set indexList(AUT) {{"author" "Author"} \
			   {"title" "Title"} \
			   {"subject" "Subject"} \
			   {"organization" "Org Name"} \
			   {"series" "Series"} \
			   {"xtitle" "Exact Title"} \
			   {"xsu" "Exact Subject"} \
			   {"date" "Date"} {"lang" "Language"} \
			   {"isbn" "ISBN"} {"lccn" "LCCN"} \
			   {"unused" "Unused"}}
set indexList(FLP) {{"author" "Author"} \
			   {"title" "Title"} \
			   {"subject" "Subject"} \
			   {"organization" "Org Name"} \
			   {"series" "Series"} \
			   {"xtitle" "Exact Title"} \
			   {"xsu" "Exact Subject"} \
			   {"date" "Date"} {"lang" "Language"} \
			   {"isbn" "ISBN"} {"lccn" "LCCN"} \
			   {"unused" "Unused"}}

set indexList(melvyl) {{"author" "Author"} \
			   {"title" "Title"} \
			   {"subject" "Subject"} \
			   {"organization" "Org Name"} \
			   {"series" "Series"} \
			   {"xtitle" "Exact Title"} \
			   {"xsu" "Exact Subject"} \
			   {"date" "Date"} {"lang" "Language"} \
			   {"isbn" "ISBN"} {"lccn" "LCCN"} \
			   {"unused" "Unused"}}

set indexList(ten) {{"author" "Author"} \
			{"title" "Title"} \
			{"subject" "Subject"} \
			{"organization" "Org Name"} \
			{"series" "Series"} \
			{"xtitle" "Exact Title"} \
			{"xsu" "Exact Subject"} \
			{"date" "Date"} {"lang" "Language"} \
			{"isbn" "ISBN"} {"lccn" "LCCN"} \
			{"unused" "Unused"}}

set indexList(pe) {{"author" "Author"} {"title" "Title"} \
		       {"subject" "Subject"} \
		       {"organization" "Org Name"} \
		       {"series" "Series"} \
		       {"xtitle" "Exact Title"} \
		       {"xsu" "Exact Subject"} \
		       {"issn" "ISSN"} {"unused" "Unused"}}

set indexList(mags) {{"author" "Author"} {"title" "Title"} \
			 {"subject" "Subject"} \
			 {"any" "Keyword"} \
			 {"xtitle" "Exact Title"} \
			 {"xsu" "Exact Subject"} \
			 {"date" "Date"} \
			 {"unused" "Unused"}}

set indexList(comp) {{"author" "Author"} {"title" "Title"} \
			 {"subject" "Subject"} \
			 {"any" "Keyword"} \
			 {"xsu" "Exact Subject"} \
			 {"date" "Date"} \
			 {"unused" "Unused"}}

set indexList(news) {{"author" "Author"} {"title" "Title"} \
			 {"subject" "Subject"} \
			 {"any" "Keyword"} \
			 {"xsu" "Exact Subject"} \
			 {"date" "Date"} \
			 {"unused" "Unused"}}

set indexList(ins) {{"author" "Author"} {"title" "Title"} \
			 {"subject" "Subject"} \
			 {"any" "Keyword"} \
			 {"host-item" "Exact Source"} \
			 {"date" "Date"} \
			 {"unused" "Unused"}}

set indexList(abi) {{"author" "Author"} {"title" "Title"} \
			 {"subject" "Subject"} \
			 {"any" "Keyword"} \
			 {"xtitle" "Exact Title"} \
			 {"xsu" "Exact Subject"} \
			 {"host-item" "Exact Source"} \
			 {"date" "Date"} \
			 {"unused" "Unused"}}

set indexList(cmu) {{"author" "Author"} \
			{"title" "Title"} \
			{"subject" "Subject"} \
			{"any" "Keyword"} \
			{"organization" "Org Name"} \
			{"series" "Series"} \
			{"xauthor" "Exact Author"} \
			{"xtitle" "Exact Title"} \
			{"xsu" "Exact Subject"} \
			{"xca" "Exact Org Name"} \
			{"ut" "Uniform Title"} \
			{"date" "Date"} \
			{"unused" "Unused"}}

set indexList(lc_books) {{"author" "Author"} \
			     {"title" "Title"} \
			     {"subject" "Subject"} \
			     {"organization" "Org Name"} \
			     {"series" "Series"} \
			     {"xauthor" "Exact Author"} \
			     {"xtitle" "Exact Title"} \
			     {"xsu" "Exact Subject"} \
			     {"xca" "Exact Org Name"} \
			     {"isbn" "ISBN"} {"lccn" "LCCN"} \
			     {"unused" "Unused"}}

set indexList(uncc) {{"author" "Author"} {"title" "Title"} \
			 {"subject" "Subject"} \
			 {"any" "Keyword"} \
			 {"organization" "Org Name"} \
			 {"series" "Series"} \
			 {"ut" "Uniform Title"} \
			 {"date" "Date"} {"lang" "Language"} \
			 {"unused" "Unused"}}

set indexList(duke) {{"author" "Author"} {"title" "Title"} \
			 {"subject" "Subject"} \
			 {"any" "Keyword"} \
			 {"organization" "Org Name"} \
			 {"series" "Series"} \
			 {"ut" "Uniform Title"} \
			 {"date" "Date"} {"lang" "Language"} \
			 {"isbn" "ISBN"} \
			 {"unused" "Unused"}}

set indexList(penn) {{"author" "Author"} {"title" "Title"} \
			 {"subject" "Subject"} \
			 {"any" "Keyword"} \
			 {"organization" "Org Name"} \
			 {"series" "Series"} \
			 {"date" "Date"} \
			 {"unused" "Unused"}}

set indexList(oxford1) {{"author" "Author"} {"title" "Title"} \
			     {"subject" "Subject"} \
			     {"record_type_key" "Record type"} \
			     {"xauthor" "Exact Author"} \
			     {"xtitle" "Exact Title"} \
			     {"topic" "Topic Words"} \
			     {"call" "Call Number"} \
			     {"issn" "ISSN"} \
                             {"date" "Date"} \
			     {"unused" "Unused"}}

set indexList(oxford2) {{"author" "Author"} {"title" "Title"} \
			     {"subject" "Subject"} \
			     {"record_type_key" "Record type"} \
			     {"xauthor" "Exact Author"} \
			     {"xtitle" "Exact Title"} \
			     {"topic" "Topic Words"} \
			     {"call" "Call Number"} \
			     {"issn" "ISSN"} \
                             {"date" "Date"} \
			     {"unused" "Unused"}}

set indexList(liverpool) {{"author" "Author"} {"title" "Title"} \
			     {"subject" "Subject"} \
			     {"record_type_key" "Record type"} \
			     {"xauthor" "Exact Author"} \
			     {"xtitle" "Exact Title"} \
			     {"topic" "Topic Words"} \
			     {"call" "Call Number"} \
			     {"issn" "ISSN"} \
                             {"date" "Date"} \
			     {"unused" "Unused"}}

set indexList(cheshire) {{"author" "Author"} {"title" "Title"} \
			     {"subject" "Subject"} \
			     {"record_type_key" "Record type"} \
			     {"xauthor" "Exact Author"} \
			     {"xtitle" "Exact Title"} \
			     {"topic" "Topic Words"} \
			     {"call" "Call Number"} \
			     {"issn" "ISSN"} \
                             {"date" "Date"} \
			     {"unused" "Unused"}}

set indexList(russian) {{"author" "Author"} {"title" "Title"} \
			     {"subject" "Subject"} \
			     {"record_type_key" "Record type"} \
			     {"topic" "Topic Words"} \
			     {"call" "Call Number"} \
                             {"date" "Date"} \
			     {"unused" "Unused"}}

set indexList(att) {{"author" "Author"} \
			{"title" "Title"} \
			{"subject" "Subject"} \
			{"any" "Keyword"} \
			{"xauthor" "Exact Author"} \
			{"organization" "Org Name"} \
			{"conf" "Conference Name"} \
			{"series" "Series"} \
			{"unused" "Unused"}}

set indexList(SUNSITE) {{"author" "Author"} {"title" "Title"} \
			     {"subject" "Subject"} \
			     {"record_type_key" "Record type"} \
			     {"xauthor" "Exact Author"} \
			     {"xtitle" "Exact Title"} \
			     {"topic" "Topic Words"} \
			     {"call" "Call Number"} \
			     {"unused" "Unused"}}

set indexList(sherlock) {{"author" "Author"} {"title" "Title"} \
			     {"subject" "Subject"} \
			     {"record_type_key" "Record type"} \
			     {"xauthor" "Exact Author"} \
			     {"xtitle" "Exact Title"} \
			     {"topic" "Topic Words"} \
			     {"call" "Call Number"} \
			     {"unused" "Unused"}}

set indexList(trec) {{"docno" "Doc. No."} \
                        {"author" "Author"} \
                        {"title" "Headline"} \
                        {"topic" "Topic Words"} \
                        {"date" "Date"} \
                        {"unused" "Unused"}}

set indexList(cheshire3) {{"author" "Author"} {"title" "Title"} \
			      {"subject" "Subject"} \
			      {"record_type_key" "Record type"} \
			      {"xauthor" "Exact Author"} \
			      {"xtitle" "Exact Title"} \
			      {"topic" "Topic Words"} \
			      {"unused" "Unused"}}

# list of probabilistic search types, and matching button labels.
# dr == rank by individual record, cs == rank by classification cluster
set probTypeList {{"dr" "By Record"} {"cs" "By Topic Area"} \
		      {"unused" "Unused"}}

# list of user interface configurations
set searchList {{"bl" "Boolean"} {"pr" "Ranked"}}

# list of boolean terms for buttons
set boolList {"and" "or" "AND" "OR"}

# list of record display formats and button labels
# used by currFormat and currFormatName
set formatList {{"review" "Review"} {"short" "Short"} {"long" "Long"} \
		    {"marc" "MARC"}}

# list of info format node names used by help system,
# given here for use in logging
set C2_nodenames(cheshire2.info) {{"Top" "100"} \
				 {"Introduction" "101"} \
				 {"FAQ" "102"} \
				 {"FAQ-1" "103"} \
				 {"FAQ-2" "104"} \
				 {"FAQ-3" "105"} \
				 {"FAQ-4" "106"} \
				 {"FAQ-5" "107"} \
				 {"FAQ-6" "108"} \
				 {"FAQ-7" "109"} \
				 {"Getting Started" "110"} \
				 {"Selecting a Host" "111"} \
				 {"Changing the Interface" "112"} \
				 {"Changing Display Format" "113"} \
				 {"Changing the Size of Downloads" "114"} \
				 {"Conducting a Search" "115"} \
				 {"Boolean Searches" "116"} \
				 {"Ranked Searches" "117"} \
				 {"Hypertext Searches" "118"} \
				 {"Search History" "119"} \
				 {"Viewing Results" "120"} \
				 {"Moving Around" "121"} \
				 {"Changing the Display" "122"} \
				 {"Using Your Results" "123"} \
				 {"Printing Results" "124"} \
				 {"E-mailing Results" "125"} \
				 {"Searching with your Results" "126"} \
				 {"Saving Records" "127"} \
				 {"Viewing Saved Records" "128"} \
				 {"Miscellany" "129"}}

set C2_nodenames(search.info) {{"Top" "200"} \
			      {"Introduction" "201"} \
			      {"Where to Search" "202"} \
			      {"How to Search" "203"} \
			      {"Results equals 0??!!" "204"} \
			      {"Results equals 31287??!!" "205"} \
			      {"So close and yet so far" "206"}}

# Following lists provide tagging sets for text display of OPAC records.
# The elements of each list are: 1. Identifying tag actually appearing
# in text (what we use to find text to do Tcl/Tk tagging on); 2. a
# string to configure the appearance of the text after the identifying tag;
# 3. a formatting string used to produce the command bound to the tag
# (%s refers to the tagged text in most every case); and 4. whether we
# should tag all text after identify as one big tag, tag separate items
# by line breaks, or tag up through the listed character(s) (e.g., title all 
# gets tagged as one item, subjects get tagged individually, authors get
# tagged through the second ',' or the end).

set reviewTags {{"Author:" \
		     "-relief flat -foreground $HTFG" \
		     "ClearTerms; .search.button0.menu invoke 0; \
set searchTerm(0) \"%s\"; set HTAuthor 1; pSearchButtonCmd" \
		     "ALL"} \
		  {"Title:" \
		       "-font $titleFont" \
		       "" \
		       "ALL"}}

set shortTags {{"Author:" \
		    "-relief flat -foreground $HTFG" \
		    "ClearTerms; .search.button0.menu invoke 0; \
set searchTerm(0) \"%s\"; set HTAuthor 1; pSearchButtonCmd" \
		    "ALL"} \
		  {"Title:" \
		       "-font $titleFont" \
		       "" \
		       "ALL"} \
		  {"Subjects:" \
		       "-relief flat -foreground $HTFG" \
		       "ClearTerms; .search.button0.menu invoke 2; \
set searchTerm(0) \"%s\"; set HTSubject 1; pSearchButtonCmd" \
		       "LINES"}}


set longTags {{"Author:" \
		   "-relief flat -foreground $HTFG" \
		   "ClearTerms; .search.button0.menu invoke 0; \
set searchTerm(0) \"%s\"; set HTAuthor 1; pSearchButtonCmd" \
		   "ALL"} \
		  {"Title:" \
		       "-font $titleFont" \
		       "" \
		       "ALL"} \
		  {"Subjects:" \
		       "-relief flat -foreground $HTFG" \
		       "ClearTerms; .search.button0.menu invoke 2; \
set searchTerm(0) \"%s\"; set HTSubject 1; pSearchButtonCmd" \
		       "LINES"} \
		  {"Other Authors:" \
		       "-relief flat -foreground $HTFG" \
		       "ClearTerms; .search.button0.menu invoke 0; \
set searchTerm(0) \"%s\"; pSearchButtonCmd" \
		       "LINES"}}

# set the current display format to short
set currFormat [lindex [lindex $formatList 1] 0]
set currFormatName [lindex [lindex $formatList 1] 1]

# set the initial host to nothing with hostname button showing START
set currHost ""
set currHostName "START"

# hostKLUDGE is used to grab the host name by the loggin functions.
# Don't ask.
set hostKLUDGE ""

# set the user interface up for ranked searching
set currSearch "pr"
set currSearchName "Ranked"

# start with all boolean buttons set to a value of "and" or "AND"
set boolSwitch1 [lindex $boolList 0]
set boolSwitch2 [lindex $boolList 2]
set boolSwitch3 [lindex $boolList 0]

# start with a bunch of useful global variables set to empty or 0
set currSelectList {};			# currently selected records
set currSaveList {};			# Saved records from current search
set permSaveList {};			# Saved records from prev searches
set currHistory {};                     # List of previous searches
set nHits 0;                            # total hits for search
set nRetr 0;                            # records retrieved for this search
set totRcvd 0
set defaultPacketSize 10;               # approx. records to grab at 1 time
set currPacketSize $defaultPacketSize
set unusedButtonName "Index?";          # boolean index button

# NEW VARIABLES FOR PROB SEARCHING
set unusedProbButtonName "Ranking?";    # probabilistic type button
set currProbType "unused";              # initialize probtype as not used
set currProbTypeName "Unused";          # ditto
set probSearchTerm "";                  # initialize prob search term
set lastHost "";                        # initialize last host we searched
set fname "fake";                       # initialize filename for DTD's 

# set numeric values for the different Z39.50 record types that cheshire
# client can handle
set MARC 1
set SGMLMARC 2
set OPAC 3
set SUTRS 4
set SGML 5

set dtd_files {};                       # list of DTD's we know about
set csStage 0;			        # Cluster Search Stage (1 or 2)

# REGISTER LOCAL DTD'S
set dtdpat "*.dtd"
foreach match [glob -nocomplain $tmpdir$dtdpat] {
    lappend dtd_files $match
}

# NEW VARIABLES FOR LOGGING
set HTAuthor 0;                         # set 1 if hypertext author search
set HTSubject 0;                        # set 1 if hypertext subject search
set HistSrch 0;                         # set 1 if search from history
set FBcmd "";                           # feedback command string
set ERROR "";                           # error string
# set IdleID 0 -- I have no idea why I thought I needed this

# Variables created and initialized below
#
#   index($i)         index name associated with entry window i
#   searchTerm($i)    search term associated with entry window i


# Options

option add *background $defaultBG
option add *activeBackground $defaultActiveBG
option add *disabledForeground $disabledFG
option add *Dialog*background $dialogBG
option add *Dialog*activeBackground $dialogActiveBG

#
# Set interface size for current display
#
set screenheight [winfo screenheight .]
set screenwidth [winfo screenwidth .]
if {($screenheight >= 768) && ($screenwidth >= 1024)} {
    set windowsize large
    set newwindowsize large
    wm minsize . 650 650
    wm maxsize . 950 950
    set titleFont "-adobe-courier-bold-o-normal--17-120-100-100-m-100-iso8859-1"
    set defaultFont "-adobe-helvetica-bold-r-normal--17-120-100-100-p-92-iso8859-1"; # for Buttons
    set entryFont "*-adobe-courier-bold-r-normal--17-120-100-100-m-100-iso8859-1";     # for entry widgets
    set smallFont "-adobe-times-bold-i-normal--14-100-100-100-p-77-iso8859-1";       # for small labels
    set statusFont "-adobe-helvetica-bold-r-normal--14-100-100-100-p-82-iso8859-1";  # for status bar
} elseif {($screenheight >=600) && ($screenwidth >= 800)} {
    set windowsize medium
    set newwindowsize medium
    wm minsize . 525 525
    wm maxsize . 850 850
    set titleFont "-adobe-courier-bold-o-normal--14-100-100-100-m-90-iso8859-1"
    set defaultFont "-adobe-helvetica-bold-r-normal-14-100-100-100-p-82-iso8859-1"; # for Buttons
    set entryFont "-adobe-courier-bold-r-normal--14-100-100-100-m-90-iso8859-1";     # for entry widgets
    set smallFont "-adobe-times-bold-i-normal--11-80-100-100-p-57-iso8859-1";       # for small labels
    set statusFont "-adobe-helvetica-bold-r-normal--11-80-100-100-p-60-iso8859-1";  # for status bar
} elseif {($screenheight >=480) && ($screenwidth >= 640)} {
    set windowsize small
    set newwindowsize small
    wm minsize . 400 400
    wm maxsize . 750 750
    set titleFont "-adobe-courier-bold-o-normal--11-80-100-100-m-60-iso8859-1"
    set defaultFont "-adobe-helvetica-bold-r-normal--11-80-100-100-p-60-iso8859-1"; # for Buttons
    set entryFont "-adobe-courier-bold-r-normal--11-80-100-100-m-60-iso8859-1";     # for entry widgets
    set smallFont "-adobe-times-bold-i-normal--11-80-100-100-p-57-iso8859-1";       # for small labels
    set statusFont "-adobe-helvetica-bold-r-normal--11-80-100-100-p-60-iso8859-1";  # for status bar
}

#
# Basic structure of search interface
# 

wm title . "Cheshire II"
wm iconname . "Cheshire II"

frame .mbar -relief raised -bd 1;	# Background for menu bar
frame .search -relief raised -bd 1;	# Background for entry windows
frame .search.panel0 -relief flat;	#   Label
frame .search.panel1 -relief flat;	#   space for prob. search panel
frame .search.panel2 -relief flat;	#   Empty???
frame .search.panel3 -relief flat;      #   boolean entry windows
frame .search.bbar -relief flat;        # Background for button bar
frame .retrieve -relief raised -bd 1;	# Background for text window
frame .statusbar -relief raised -bd 1;	#   Control panel
frame .statusbar.top -relief flat;
frame .statusbar.bottom -relief flat;
frame .statusbar.top.bbar2 -relief flat -bd 1;  #Background for lower button bar
frame .statusbar.bottom.a -relief flat;	#     Retrieval counter
frame .statusbar.bottom.b -relief flat;	#     Action label -- blinkenlight


#
#   Status Bar
#

scale .statusbar.bottom.a.scale -label Retrievals -length 10c -sliderlength 8 \
    -background $defaultBG -orient horizontal -from 0 \
    -foreground $disabledFG -state disabled -troughcolor $disabledFG \
    -highlightbackground $defaultBG -highlightcolor $defaultBG \
    -font $statusFont

label .statusbar.bottom.a.hitsLabel -textvariable nHits \
    -foreground $defaultBG -font $statusFont

button .statusbar.bottom.b.actionLabel -text "Inactive" -width 12 \
    -relief sunken -foreground $defaultBG \
    -disabledforeground $defaultBG -state disabled \
    -highlightbackground $defaultBG -highlightcolor $defaultBG \
    -font $statusFont


#
#   Lower Button Bar
#

button .statusbar.top.bbar2.print -relief raised -bd 2 -text "Print" \
    -command "pPrintDlg" -bg $buttonBG -state disabled \
    -highlightbackground $defaultBG -highlightcolor $defaultBG \
    -font $defaultFont
button .statusbar.top.bbar2.mail -relief raised -bd 2 -text "Mail" \
    -command "pMailButtonCmd .m main" -bg $buttonBG -state disabled \
    -highlightbackground $defaultBG -highlightcolor $defaultBG \
    -font $defaultFont
button .statusbar.top.bbar2.feedback -relief raised -bd 2 \
    -text "More Like Selected" \
    -command "pFeedbkButtonCmd" -bg $buttonBG -state disabled \
    -highlightbackground $defaultBG -highlightcolor $defaultBG \
    -font $defaultFont
button .statusbar.top.bbar2.save -relief raised -bd 2 -text "Save" \
    -command "pSaveButtonCmd" -bg $buttonBG -state disabled \
    -highlightbackground $defaultBG -highlightcolor $defaultBG \
    -font $defaultFont
button .statusbar.top.bbar2.saved -relief raised -bd 2 -text "View Saved" \
    -command "pViewSaveButtonCmd" -bg $buttonBG -state disabled \
    -highlightbackground $defaultBG -highlightcolor $defaultBG \
    -font $defaultFont

#
#   Retrieval window
#   

text .retrieve.text -relief sunken -bd 1 -width 86 -height 22 \
    -background $textBG \
    -highlightbackground $defaultBG \
    -highlightcolor $defaultBG \
    -selectbackground $textBG \
    -selectborderwidth 0 \
    -font $entryFont \
    -cursor {} \
    -wrap word \
    -state disabled \
    -yscrollcommand ".retrieve.scroll set";	# Text window

scrollbar .retrieve.scroll \
    -background $defaultBG \
    -activebackground $defaultActiveBG \
    -relief sunken \
    -troughcolor $buttonBG \
    -highlightcolor $buttonBG \
    -highlightbackground $defaultBG \
    -command ".retrieve.text yview";		# Scroll bar

bind .retrieve.scroll <Any-ButtonRelease> {pMoreButtonCmd $currPacketSize}
pTagCreate .retrieve.text


#
#   Entry window
#   

#     Create 4 menubuttons and entry windows.  The search terms
#     entered are associated with the index currently listed on
#     the button

label .search.title -text "SEARCH TERMS" -font $defaultFont
label .search.problabel -font $smallFont -text "Ranked Searching:"
menubutton .search.probtype -relief raised -text $unusedProbButtonName  \
    -menu .search.probtype.menu -bg $buttonBG -state disabled -width 13 \
    -height 1 -font $defaultFont
text .search.probentry -relief sunken -width 75 -height 2  \
    -font $entryFont -highlightbackground $defaultBG \
    -background $entryBG  -wrap word -state disabled -highlightcolor black
bind .search.probentry <Return> pSearchButtonCmd

label .search.boollabel -font $smallFont -text "Boolean Searching:"
label .search.booltype0 -text "A" -foreground $boolTypeFG \
	-font $defaultFont
button .search.bool1 -relief raised -bd 1 -textvariable boolSwitch1 \
	-bg $buttonBG -fg $boolTypeFG -command "pBooleanTypeDisplay 1" \
	-highlightbackground $defaultBG -highlightcolor $defaultBG \
	-font $defaultFont
label .search.booltype1 -text "B" -foreground $boolTypeFG \
	-font $defaultFont

for {set i 0} {$i<2} {incr i} {
    set index($i) "unused"
    set searchTerm($i) ""
    menubutton .search.button$i -relief raised -width 11 -height 1 \
	-text $unusedButtonName -menu .search.button$i.menu \
	-bg $buttonBG -state disabled -font $defaultFont
    entry .search.entry$i -width 25 -relief sunken \
	-font $entryFont -highlightbackground $defaultBG \
	-background $entryBG -state disabled -highlightcolor black
    bind .search.entry$i <Return> pSearchButtonCmd
}


#
#   Upper Button bar
#   

button .search.bbar.history -relief raised -bd 2 -text "View History" \
    -command "pHistoryButtonCmd" -bg $buttonBG -state disabled \
    -highlightbackground $defaultBG -highlightcolor $defaultBG \
    -font $defaultFont 
button .search.bbar.search -relief raised -bd 2 -padx 20 -pady 5 \
    -text "SEARCH" -command pSearchButtonCmd -bg $buttonBG -state disabled \
    -highlightbackground $defaultBG -highlightcolor $defaultBG \
	-font $defaultFont
button .search.bbar.clear -relief raised -bd 2 -text "Clear Terms" \
    -bg $buttonBG -command "ClearTerms" -highlightbackground $defaultBG \
    -highlightcolor $defaultBG -font $defaultFont

#
#   Menubar
#  

menubutton .mbar.exit -text "Exit  " -menu .mbar.exit.menu -underline 0 \
	-font $defaultFont
label .mbar.hostDisp -relief flat -text "Host:" -font $defaultFont
menubutton .mbar.host -width 20 -relief groove -bd 3 -textvariable \
   	 currHostName -bg $buttonBG -fg red -menu .mbar.host.menu \
 	 -font $defaultFont
label .mbar.searchDisp -relief flat -text "  Search Interface:" \
	 -font $defaultFont
menubutton .mbar.search -width 10 -relief groove -bd 3 \
    -textvariable currSearchName -bg $buttonBG -menu .mbar.search.menu\
	-font $defaultFont
label .mbar.formatDisp -relief flat -text "  Display:" -font $defaultFont
menubutton .mbar.format -width 7 -relief groove -bd 3 \
    -textvariable currFormatName -bg $buttonBG -menu .mbar.format.menu \
	-font $defaultFont
menubutton .mbar.special -text "Options" -menu .mbar.special.menu \
    -underline 0 -font $defaultFont
menubutton .mbar.help -text "Help" -menu .mbar.help.menu \
    -underline 0 -font $defaultFont


#   Exit menu

menu .mbar.exit.menu -tearoff 0
.mbar.exit.menu add command -label "Yes" -underline 0 \
    -command "pRestart" -font $defaultFont
.mbar.exit.menu add command -label "No" -underline 0 -font $defaultFont

# the REAL way to quit

bind . <Control-q> {zclose; destroy .; exit}

#   Host menu

menu .mbar.host.menu -selectcolor $selectFG -tearoff 0
foreach l $hostList {
    .mbar.host.menu add radiobutton -indicatoron 1 -selectcolor $selectFG \
	-label [lindex $l 1] \
	-variable currHostName -value [lindex $l 1] \
	-command "pZselect [lindex $l 0]" -font $defaultFont
}
.mbar.host.menu add radiobutton -label "None" -variable currHostName \
    -value "START" -command "set lastHost $currHost; set currHost \"\"; \
     set currSearch \"pr\"; pSearchChange 1; pResetButtonCmd; zclose" \
	-font $defaultFont


#   Search interface menu

menu .mbar.search.menu -selectcolor $selectFG -tearoff 0
foreach l $searchList {
    .mbar.search.menu add radiobutton -label [lindex $l 1] \
	-variable currSearch -value [lindex $l 0] \
	-command "pSearchChange 0;" -font $defaultFont
}

#   record format menu

menu .mbar.format.menu -selectcolor $selectFG -tearoff 0
foreach l $formatList {
    .mbar.format.menu add radiobutton -label [lindex $l 1] \
	-variable currFormat -value [lindex $l 0] \
	-command pReformat -font $defaultFont
}


#   Options menu
menu .mbar.special.menu -tearoff 0 -selectcolor $selectFG
.mbar.special.menu add cascade -label "Packet Size" -underline 0 \
    -menu .mbar.special.menu.packet -font $defaultFont
.mbar.special.menu add cascade -label "Window Size" -underline 0 \
    -menu .mbar.special.menu.win -font $defaultFont
.mbar.special.menu add command -label "Restart" -underline 0 \
	-command pResetButtonCmd -font $defaultFont
menu .mbar.special.menu.packet -tearoff 0 -selectcolor $selectFG
foreach l {{5 "5"} {10 "10"} {25 "25"} \
	       {50 "50"} {75 "75"} {100 "100"}} {
    .mbar.special.menu.packet add radiobutton -label [lindex $l 1] \
	-variable currPacketSize -value [lindex $l 0] -font $defaultFont
}
menu .mbar.special.menu.win -tearoff 0 -selectcolor $selectFG
.mbar.special.menu.win add radiobutton -label "Small" \
    -variable newwindowsize -value "small" -command pResize \
	-font $defaultFont
.mbar.special.menu.win add radiobutton -label "Medium" \
    -variable newwindowsize -value "medium" -command pResize \
	-font $defaultFont
.mbar.special.menu.win add radiobutton -label "Large" \
    -variable newwindowsize -value "large" -command pResize \
	-font $defaultFont

#   Help Menu
menu .mbar.help.menu -tearoff 0
.mbar.help.menu add command -label "Quick Start" -underline 0 \
	-command "createHelpListBox QuickStart doc/quickstart.help.txt" \
	-font $defaultFont
.mbar.help.menu add command -label "On Cheshire II" -underline 3 \
	-command "tkiWinShow Top cheshire2.info" -font $defaultFont
.mbar.help.menu add command -label "On Search Strategies" -underline 3 \
	-command "tkiWinShow Top search.info" -font $defaultFont
.mbar.help.menu add command -label "Complaints Dept." -underline 11 \
	-command "pComplaints .help" -font $defaultFont
.mbar.help.menu add command -label "Credits" \
	-command "chCredits .help main"  -font $defaultFont

#
#   Pack
#

pack .mbar .search .retrieve .statusbar -side top -fill x
pack .search.panel0 -side top -fill x
pack .search.panel1 -side top -fill x -pady 1m
pack .search.panel2 .search.panel3 .search.bbar -side top -fill x
pack .mbar.exit -side left -pady 2
pack .mbar.hostDisp .mbar.host -side left -pady 2
pack .mbar.searchDisp .mbar.search -side left -pady 2
pack .mbar.formatDisp .mbar.format -side left -pady 2
pack .mbar.help -side right -ipadx 2m -pady 2
pack .mbar.special -side right -ipadx 2m -pady 2
pack .search.bbar.clear -side left -pady 12 -ipadx 3m -expand 1
pack .search.bbar.search -side left -pady 12 -ipadx 3m -ipady 2 -expand 1
pack .search.bbar.history -side left -pady 12 -ipadx 3m -expand 1
pack .retrieve.scroll -in .retrieve -side right -fill y -padx 2 -pady 2
pack .retrieve.text -in .retrieve -side left -padx 2 -pady 2 -fill x -expand 1
pack .statusbar.top .statusbar.bottom -side top -fill x -in .statusbar
pack .statusbar.top.bbar2 -side top -fill x -in .statusbar.top
pack .statusbar.top.bbar2.print .statusbar.top.bbar2.mail \
	.statusbar.top.bbar2.feedback .statusbar.top.bbar2.save \
	.statusbar.top.bbar2.saved -side left -pady 4 -ipadx 3m -expand 1
pack .statusbar.bottom.a -in .statusbar.bottom -side left -fill x -pady 1
pack .statusbar.bottom.b -in .statusbar.bottom -side right -fill x -pady 1
pack .search.title  -in .search.panel0 -side top
pack .search.problabel -in .search.panel1 -side top -anchor w
pack .search.probtype -in .search.panel1 \
	-side left -padx 1m
pack .search.probentry -in .search.panel1 \
	-side left -padx 1m -pady 1m
pack .search.boollabel -in .search.panel2 -side top -anchor w
pack .search.button0 -in .search.panel2 \
    -side left -padx 1m
pack .search.entry0 -in .search.panel2 \
    -side left -padx 1m -pady 1m
pack .search.booltype0 .search.bool1 .search.booltype1 -in .search.panel2 \
    -side left -fill x -expand 1
pack .search.entry1 -in .search.panel2 \
    -side right -padx 1m -pady 1m
pack .search.button1 -in .search.panel2 \
    -side right -padx 1m
pack .statusbar.bottom.a.scale -in .statusbar.bottom.a -side left -padx 3m \
    -ipadx 5 -ipady 3
pack .statusbar.bottom.a.hitsLabel -in .statusbar.bottom.a -side left -ipady 3
pack .statusbar.bottom.b.actionLabel -in .statusbar.bottom.b -side right \
    -padx 10m -ipadx 1m -ipady 3

# set cursor keys to move record display window 
bind . <KeyPress-Up> {.retrieve.text yview scroll -1 units}
bind . <KeyPress-Down> {.retrieve.text yview scroll 1 units}
bind . <KeyPress-Prior> {.retrieve.text yview scroll -1 pages}
bind . <KeyPress-Next> {.retrieve.text yview scroll 1 pages}
bind . <KeyRelease-Up> {pMoreButtonCmd $currPacketSize}
bind . <KeyRelease-Down> {pMoreButtonCmd $currPacketSize}
bind . <KeyRelease-Prior> {pMoreButtonCmd $currPacketSize}
bind . <KeyRelease-Next> {pMoreButtonCmd $currPacketSize}

# Establish file for transaction logging
# log files have names using date/time client was started for first half,
# and either fixlog or varlog for second half, depending on whether it's
# a fixed length record logfile or variable length record log file.
# Yes, combining these into one logfile would be a good idea.
#set err [catch {exec date +%m_%d_%y_%H:%M:%S} datetime]
set datetime [clock format [clock seconds] -format "%m_%d_%y_%H:%M:%S"]
set fixedlogfilename "$tmpdir$datetime.fixlog"
set fixedlogfile [open $fixedlogfilename w]
close $fixedlogfile
set varlogfilename "$tmpdir$datetime.varlog"
set varlogfile [open $varlogfilename w]
close $varlogfile
exec /bin/chmod og+rw $tmpdir$datetime.fixlog
exec /bin/chmod og+rw $tmpdir$datetime.varlog

# Set the client to restart after 5 minutes of nonuse
catch {after 600000 {pLogCmd 33; pRestart}} idleID
bind . <Button> {after cancel $idleID; catch {after 600000 {pLogCmd 33; pRestart}} idleID}
bind . <Key> {after cancel $idleID; catch {after 600000 {pLogCmd 33;
pRestart}} idleID}


